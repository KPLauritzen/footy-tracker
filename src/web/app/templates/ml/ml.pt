<div metal:use-macro="load: ../shared/_layout.pt">
    <div metal:fill-slot="content" tal:omit-tag="True">

                <div class="card">
                    <header class="card-header p-3">
                        <div class="media">
                            <div class="media-left">
                                <figure class="image is-64x64 mt-3">
                                    <img src="/static/img/dice-outline.svg" alt="dice-icon">
                                </figure>
                            </div>
                            <div class="media-content">
                                <p class="title is-2 mt-4">FootyML</p>
                            </div>
                        </div>
                    </header>
                    <div class="tabs is-large">
                        <ul>
                            <li class="is-active">
                                <a class="tablinks" onclick="TabclickHandle(event, 'mymodels')">
                                        <span class="icon">
                                            <img src="/static/img/robot.png" alt="user-icon">
                                        </span>
                                    <span>My models</span>
                                </a>
                            </li>
                            <li>
                                <a class="tablinks" onclick="TabclickHandle(event, 'mlleaderboard')">
                                        <span class="icon">
                                            <img src="/static/img/leaderboard-2.png" alt="user-icon">
                                        </span>
                                    <span>ML leaderboard</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div id="tabs-with-content">
                        <div id="mymodels" class="tabcontent">
                            <div class="columns">
                            <div class="column is-one-quarter">
                            <div class="card-content">

                                <div tal:repeat="m user_ml_models" class="card mt-2" id=${model_css_ids[m]}>
                                    <header class="card-header p-1">
                                        <div class="media">
                                            <div class="media-left">
                                                <figure class="image is-64x64 mb-1">
                                                    <img src="https://robohash.org/${ user_ml_models[m].model_name }" class="is-rounded"
                                                         alt="model-image1">
                                                </figure>
                                            </div>
                                            <div class="media-content">
                                                <p class="title is-3 mt-5">${ user_ml_models[m].model_name }</p>
                                            </div>
                                        </div>
                                    </header>
                                    <div class="card-content">
                                        <div class="content">

                                            <table class="table is-fullwidth is-striped is-hoverable is-fullwidth">
                                                <tr>
                                                    <th class="has-text-left">Ranking</th>
                                                    <td class="has-text-left">1</td>
                                                </tr>
                                                <tr>
                                                    <th class="has-text-left">MAE long window</th>
                                                    <td class="has-text-left">
                                                    ${ "{:.2f}".format(model_latest_ml_metric[user_ml_models[0].id].rolling_long_window_mae) }
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th class="has-text-left">MAE short window</th>
                                                    <td class="has-text-left">
                                                    ${ "{:.2f}".format(model_latest_ml_metric[user_ml_models[0].id].rolling_short_window_mae) }
                                                    </td>
                                                </tr>
                                            </table>

                                        </div>
                                    </div>
                                </div>

                                </div>
                                </div>
                                <div class="column is-two-third">
                                    <div class="columns is-mobile">
                                        <div class="column is-11">
                                            <canvas id="mlEvalChart"></canvas>
                                        </div>
                                        <br>
                                        <br>
                                        <br>
                                    </div>
                                    <br>
                                    <br>
                                </div>

                            </div>

                </div>
                        <div id="mlleaderboard" class="tabcontent is-hidden">

                        </div>
                </div>
                </div>
            </div>

    </div>

<script>
    const metric_dates_model1 = ${ [r.prediction_dt.strftime("%Y-%m-%d %H:%M:%S") for r in model_ml_metrics[user_ml_models[0].id]]};
    let model1_metrics_metrics = []
    const model1_metrics_values = ${ [m.rolling_short_window_mae for m in model_ml_metrics[user_ml_models[0].id]]};
    metric_dates_model1.forEach((date, date_index) => {
        model1_metrics_metrics.push({x: date, y: model1_metrics_values[date_index]})
    });

    const metric_dates_model2 = ${ [r.prediction_dt.strftime("%Y-%m-%d %H:%M:%S") for r in model_ml_metrics[user_ml_models[1].id]]};
    let model2_metrics_metrics = []
    const model2_metrics_values = ${ [m.rolling_short_window_mae for m in model_ml_metrics[user_ml_models[1].id]]};
    metric_dates_model2.forEach((date, date_index) => {
        model2_metrics_metrics.push({x: date, y: model2_metrics_values[date_index]})
    });

    const data = {
        datasets: [
            {
                label: 'Rolling MAE',
                backgroundColor: 'rgb(0, 209, 178)',
                borderColor: 'rgb(0, 209, 178)',
                data: model1_metrics_metrics,
            },
            {
                label: 'Rolling MAE',
                backgroundColor: 'rgb(32, 156, 238)',
                borderColor: 'rgb(32, 156, 238)',
                data: model2_metrics_metrics,
            },
        ]
    };

    const config = {
        type: 'line',
        data: data,
        options: {
            scales: {
                x: {
                    type: 'time',
                    time: {
                        displayFormats: {
                            'millisecond': 'MMM d yyyy',
                            'second': 'MMM d yyyy',
                            'minute': 'MMM d yyyy',
                            'hour': 'MMM d yyyy',
                            'day': 'MMM d yyyy',
                            'week': 'MMM d yyyy',
                            'month': 'MMM d yyyy',
                            'quarter': 'MMM d yyyy',
                            'year': 'MMM d yyyy',
                        }
                    },
                    grid: {
                        display: false
                    },
                    ticks: {
                        maxTicksLimit: 6,
                    }
                },
                y: {
                    grid: {
                        display: false
                    },
                    ticks: {
                        maxTicksLimit: 6,
                    }
                }
            },
            plugins: {
                legend: {
                    display: true,
                    position: "bottom",
                    labels: {
                        boxWidth: 15,
                        fontSize: 3
                    }
                }
            }

        }
    };

    const mlEvalChart = new Chart(
            document.getElementById('mlEvalChart'),
            config
    );



    function TabclickHandle(evt, tabId) {
        let i, tabcontent, tablinks;

        // This is to clear the previous clicked content.
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].classList.add('is-hidden');
        }

        // Set the tab to be "active".
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].parentElement.classList.remove('is-active');
        }

        // Display the clicked tab and set it to active.
        document.getElementById(tabId).classList.remove('is-hidden');
        evt.currentTarget.parentElement.classList.add('is-active');
    }
</script>